//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gml.Launcher.Assets.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gml.Launcher.Assets.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sign in.
        /// </summary>
        public static string AuthButtonText {
            get {
                return ResourceManager.GetString("AuthButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Available.
        /// </summary>
        public static string Available {
            get {
                return ResourceManager.GetString("Available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на BACK.
        /// </summary>
        public static string Back {
            get {
                return ResourceManager.GetString("Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking the server.
        /// </summary>
        public static string BackendChecking {
            get {
                return ResourceManager.GetString("BackendChecking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Still checking the server.
        /// </summary>
        public static string BackendCheckingLonger {
            get {
                return ResourceManager.GetString("BackendCheckingLonger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The server is not responding.
        /// </summary>
        public static string BackendOffline {
            get {
                return ResourceManager.GetString("BackendOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profile.
        /// </summary>
        public static string Cabinet {
            get {
                return ResourceManager.GetString("Cabinet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check the server.
        /// </summary>
        public static string CheckBackendButton {
            get {
                return ResourceManager.GetString("CheckBackendButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking the availability of the server, please wait.
        /// </summary>
        public static string CheckBackendMessage {
            get {
                return ResourceManager.GetString("CheckBackendMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server is offline right now. Try again later.
        /// </summary>
        public static string CheckBackendResultFailed {
            get {
                return ResourceManager.GetString("CheckBackendResultFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server is online. You need to restart the launcher to turn off offline mode.
        /// </summary>
        public static string CheckBackendResultSuccessful {
            get {
                return ResourceManager.GetString("CheckBackendResultSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking the server.
        /// </summary>
        public static string CheckBackendTitle {
            get {
                return ResourceManager.GetString("CheckBackendTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking file integrity.
        /// </summary>
        public static string CheckingFileIntegrity {
            get {
                return ResourceManager.GetString("CheckingFileIntegrity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking for updates.
        /// </summary>
        public static string CheckUpdates {
            get {
                return ResourceManager.GetString("CheckUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sits in the launcher.
        /// </summary>
        public static string DefaultDRpcText {
            get {
                return ResourceManager.GetString("DefaultDRpcText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto.
        /// </summary>
        public static string DynamicValue {
            get {
                return ResourceManager.GetString("DynamicValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change.
        /// </summary>
        public static string Edit {
            get {
                return ResourceManager.GetString("Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Empty.
        /// </summary>
        public static string Empty {
            get {
                return ResourceManager.GetString("Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to determine the operating system.
        /// </summary>
        public static string FailedOs {
            get {
                return ResourceManager.GetString("FailedOs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на files.
        /// </summary>
        public static string Files {
            get {
                return ResourceManager.GetString("Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full screen.
        /// </summary>
        public static string FullScreen {
            get {
                return ResourceManager.GetString("FullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error initializing the game profile..
        /// </summary>
        public static string GameProfileError {
            get {
                return ResourceManager.GetString("GameProfileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Information.
        /// </summary>
        public static string Information {
            get {
                return ResourceManager.GetString("Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Install folder.
        /// </summary>
        public static string InstallationDirectory {
            get {
                return ResourceManager.GetString("InstallationDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Installing updates.
        /// </summary>
        public static string InstallingUpdates {
            get {
                return ResourceManager.GetString("InstallingUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auth error.
        /// </summary>
        public static string InvalidAuthData {
            get {
                return ResourceManager.GetString("InvalidAuthData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to change the installation folder or an error occurred while changing the folder..
        /// </summary>
        public static string InvalidFolder {
            get {
                return ResourceManager.GetString("InvalidFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your game session in the launcher has expired, please log in again..
        /// </summary>
        public static string InvalidSession {
            get {
                return ResourceManager.GetString("InvalidSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not enough disk space.
        /// </summary>
        public static string IsDiskFull {
            get {
                return ResourceManager.GetString("IsDiskFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to detect a loaded Java for your operating system, please contact support or the project administrator..
        /// </summary>
        public static string JavaNotFound {
            get {
                return ResourceManager.GetString("JavaNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Launching.
        /// </summary>
        public static string Launching {
            get {
                return ResourceManager.GetString("Launching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Login.
        /// </summary>
        public static string Login {
            get {
                return ResourceManager.GetString("Login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lost connection to server.
        /// </summary>
        public static string LostConnection {
            get {
                return ResourceManager.GetString("LostConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred during the game. The administration has already received the details of your error.
        ///
        ///.
        /// </summary>
        public static string MinecraftExceptionStartException {
            get {
                return ResourceManager.GetString("MinecraftExceptionStartException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The mod has been successfully disabled.
        /// </summary>
        public static string ModDisabled {
            get {
                return ResourceManager.GetString("ModDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The mod has been successfully enabled.
        /// </summary>
        public static string ModEnabled {
            get {
                return ResourceManager.GetString("ModEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There are no optional mods available for this profile. If you have any suggestions, please notify the administration..
        /// </summary>
        public static string ModsEmpty {
            get {
                return ResourceManager.GetString("ModsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mods list.
        /// </summary>
        public static string ModsList {
            get {
                return ResourceManager.GetString("ModsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на On this page, you can view the list of modifications and select the ones you are interested in. You can dynamically enable or disable them at any time..
        /// </summary>
        public static string ModsListDescription {
            get {
                return ResourceManager.GetString("ModsListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на News.
        /// </summary>
        public static string News {
            get {
                return ResourceManager.GetString("News", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на It&apos;s empty here.
        /// </summary>
        public static string NewsEmptyContent {
            get {
                return ResourceManager.GetString("NewsEmptyContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There is no news right now.
        /// </summary>
        public static string NewsEmptyTitle {
            get {
                return ResourceManager.GetString("NewsEmptyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to load news.
        /// </summary>
        public static string NewsOffline {
            get {
                return ResourceManager.GetString("NewsOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to get launch settings. Please go to the client settings and try again..
        /// </summary>
        public static string NotSetting {
            get {
                return ResourceManager.GetString("NotSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There is no access to the server. The launcher works offline.
        ///To exit offline mode, make sure that the server is available, and then restart the launcher..
        /// </summary>
        public static string OfflineDescription {
            get {
                return ResourceManager.GetString("OfflineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Offline mode.
        /// </summary>
        public static string OfflineMode {
            get {
                return ResourceManager.GetString("OfflineMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на On servers.
        /// </summary>
        public static string OnServers {
            get {
                return ResourceManager.GetString("OnServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Play.
        /// </summary>
        public static string Play {
            get {
                return ResourceManager.GetString("Play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Play in.
        /// </summary>
        public static string PlayDRpcText {
            get {
                return ResourceManager.GetString("PlayDRpcText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на pl..
        /// </summary>
        public static string PlayersShort {
            get {
                return ResourceManager.GetString("PlayersShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Preparing to launch....
        /// </summary>
        public static string PreparingLaunch {
            get {
                return ResourceManager.GetString("PreparingLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profile not configured.
        /// </summary>
        public static string ProfileNotConfigured {
            get {
                return ResourceManager.GetString("ProfileNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reconnecting.....
        /// </summary>
        public static string Reconnecting {
            get {
                return ResourceManager.GetString("Reconnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restart.
        /// </summary>
        public static string RestartButton {
            get {
                return ResourceManager.GetString("RestartButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Initializing Sentry SDK.
        /// </summary>
        public static string SentrySDKInit {
            get {
                return ResourceManager.GetString("SentrySDKInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Configure the amount of RAM consumed..
        /// </summary>
        public static string SettingsRamDescription {
            get {
                return ResourceManager.GetString("SettingsRamDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings RAM.
        /// </summary>
        public static string SettingsRamTitle {
            get {
                return ResourceManager.GetString("SettingsRamTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stay.
        /// </summary>
        public static string Stay {
            get {
                return ResourceManager.GetString("Stay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Success.
        /// </summary>
        public static string Success {
            get {
                return ResourceManager.GetString("Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MB.
        /// </summary>
        public static string UnitMb {
            get {
                return ResourceManager.GetString("UnitMb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Updating.
        /// </summary>
        public static string Updating {
            get {
                return ResourceManager.GetString("Updating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Retrieving updates.
        /// </summary>
        public static string UpdatingDescription {
            get {
                return ResourceManager.GetString("UpdatingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You are using a VPN connection, which may negatively affect connection quality and game client downloads. Please disable the VPN while running the launcher..
        /// </summary>
        public static string VpnUse {
            get {
                return ResourceManager.GetString("VpnUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Website.
        /// </summary>
        public static string Website {
            get {
                return ResourceManager.GetString("Website", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Window size.
        /// </summary>
        public static string WindowSize {
            get {
                return ResourceManager.GetString("WindowSize", resourceCulture);
            }
        }
    }
}
